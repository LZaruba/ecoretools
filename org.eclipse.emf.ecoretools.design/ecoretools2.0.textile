

h1. EcoreTools 2.0 : moving to Sirius


h2. Talk

h3. Objectifs

Sirius est utilisable dès maintenant
Sirius est flexible et puissant
Il faut reflechir à l'UX et que Sirius fournit un cadre intéressant
EcoreTools revit grâce à Sirius : désormais possible d'être un "one man effort".


h3. Structure

35 min


*S* Introduction, Qui connait EcoreTools ? Qui connait Sirius ? Bref historique de tout ça

*S* Utilisation de Personnas : Alice, et Bob pour concevoir l'outil, 

*S* L'aspect graphique : on va en profiter pour initialiser le projet
 
*S* DEMO : démarrage d'un projet Sirius, utilisation de la palette Eclipse

*S* Qu'est-ce qu'un projet Sirius - synthèse : une spec, des modèles, des méta-modèles.

*S* Comment je fais varier l'aspect graphique : mandatory, derived.

*S* EcoreTools 2 : l'aspect graphique - synthèse.

*S* la vie d'Alice, qu'est-ce qui est important pour elle ?
=> les phases de démarrage, le travail avec le client

*S* ergonomie générale : des diagrammes semi-synchronisés

*S*  Explication du concept de Mapping et de la synchronization

*S* Les mappings : suite

*S*  Les evil twins des mappings : les tools, avec des create views

*S* DEMO  --> drag&drop tool  --> tool "Add" avec wizard

*S* Alice travail sur son méta-modèle: elle veut documenter

*S* Introduction des calques, des mappings supplémentaires.

*S* Alice prépare son méta-modèle pour l'utiliser : elle doit customizer des attributs de génération

*S* La vie de Bob, présentation de Bob et de ce qui est important pour lui.

*S* Les wizards, l'aide dynamique.

*S* Le calque de validation

*S* La vie de Cédric : ce qui est important pour lui : maintenance, tests, compatibilité, performance

*S* Builder EcoreTools

*S* Comment monter de version de Sirius ?

*S* Comment Cédric test EcoreTools

*S* Comment Cédric s'assure que EcoreTools monte en charge

*S* DEMO : Utilisation du Profiler

*S* Optimisation d'EcoreTools, quelques rêgles.

*S* DEMO : un peu plus d'EcoreTools 2.0

*S* Feuille de route pour Luna

 

== La vie d'Alice ==

*Quelles phases Alice utilise-t-elle ? / Représentations/PT de vue?
*Qu'est-ce qui est important pour elle ?
 - Quel aspect graphique ?
 DEMO : comment je démarre un projet Sirius, comment je définit l'aspect graphique
 
 - Quelle ergonomie générale ? Comment je la réalise ?
 * Explication du concept de Mapping et de la synchronization
 * Les evil twins des mappings : les tools
 DEMO  --> drag&drop tool  --> tool "Add" avec wizard
 * Un tool contextuel  le getRelated (?)
 
 - Comment je fais varier l'aspect graphique, mandatory, derived
DEMO :
- Le calque de validation
DEMO : 

Alice doit pouvoir noter les différentes règles métiers pendant le meeting.
- le support des contraintes, comment représenter, quoi dans le .odesign, quoi dans le code Java. 

Alice doit documenter
-> ça marche pareil, sauf que c'est dans un pdv

Alice doit préparer pour la génération

* Co-édition du Ecore et du Genmodel
* Table qui va bien

Alice doit faire une phase d'adaptation de son .ecore et identifier ce qui à changé.
 
== La vie de Bob ==
- découvrir l'outil
 
--> wizard qui crée tout
--> Noeud contextuel
--> dynamic help
--> reload automatic du genmodel

== La vie de Cédric ==

*Assurer les performances
--> utilisation du profiler
--> utilisation de feature: et service:

*Tester la non-regression
--> test de non-regression basé sur un modèle d'exemple, import, ouverture de l'éditeur, vérification.
--> intégration Tycho : ok.

*La suite ?
--> où récupérer les builds
--> quel planning
--> quels travaux supplémentaires :















This article starts a series describing how EcoreTools is moving forward by adopting Sirius. I'll take this
as a chance to give in depth details about how one can build a modeling environment with this technology.

EcoreTools is probably one of the first Eclipse based graphical modeler one discover when adopting Eclipse Modeling. 
Ecore is the root of everything in the EMF world. EcoreTools has been quite dormant since the last few years with 
many shortcomings and bugs. Since I'm starting a complete rewrite and I can look a few years back in how EcoreTools is used I'll kick things off by 
diagnosing the current usages and identifying classes of users.

Right now the graphical modeler is pretty much only used in those cases:
1 - a user discovering Ecore and EMF, that would be *Bob*
2 - a power user which only need a diagram export from time to time, that would be *Alice*

That's true, the power user is not using EcoreTools 1.x, because right now it is not offering much besides the graphical export.


h2. Personnas

Which brings us to two personnas I'm going to focus on:

*Alice* is a 30 years old contractor which have been using EMF for a few years already. She used it as the basis for domain specific tooling. Customers contact her to build a tool suite dedicated to the domain. She knows about EMF and how starting from Ecore brings her a whole world of possibilities regarding what she can achieve as a tool and Eclipse is her home. She already use it all day long.


*Bob* is a student having a project assigned about doing DSL's and Eclipse Modeling. He understood that he has to start by Ecore to do anything but he don't really know EMF yet. He saw that the EMF newsgroup is very active meaning he is confident he will get some help if needed but he never really used Eclipse so he can quickly get confused.
  

*Alice's needs* : When she meets customers she quickly drafts an Ecore diagram. EcoreTools is useful to her during that phase as the diagram offers a synthetic view of the domain model she is capturing with the stakeholders. During this drafting phase she need a tool which doesn't get into the way:
- creating/deleting types, attributes, and references as she go
- re-connecting references
- copy/pasting pretty much anything. 
- write notes about specific validation rules which are coming up during the meeting

She likes to do a final review of the domain model with the customer before leaving, going through all the visible element and 
marking them as "reviewed". When she does that, she needs to see for each types what are the  inherited attributes and references, it makes things easier to validate.

When she comes back she has to refine the domain model :
- making sure all types might be instantiated starting from a root type.
- checking cardinalities, in particular identifying elements which are mandatory
- checking abstractness of her classes and evolution, what types are likely to appear as new subtypes 
- thinking about what attributes have to be factorized.
- adding derived references when needed, thinking about opposite references.
- thinking about serialization, what should be transient or not, how "splittable" a model is regarding fragments.
- documenting all the types
- making sure it is a valid Ecore model (though Alice knows everything one can about Ecore so its merely a sanity check).
- thinking about lifecycle : how elements are referenced? how these references are changing among time ?
- [..]

From this work she is able to build the first deliverable to her client : a documentation.
To do so she split the Ecore model in several diagrams which are focused on a given aspect. 
An classic Ecore model for a customer in general will have about 100 to 250 EClasses.


Then she can move on bootstraping the first version of the tooling, in general this involves
- tweaking the genmodel : property documentation, styled label providers
- generating the associated code
- adapting the generated code to implement the derived references or operations. 
- start using Sirius, Acceleo, ATL...

She provides this first version to the client and now she will have to iterate.
- client will give feedback 
- she will adapt the Ecore model and will have to go through all the process she followed during the first step. 
This can be tedious if she can't clearly identify what change she made. 
- she will re-generate and adapt the tools she built on top.

As things went, Alice's tools are now covering several domains and as such she has several Ecore models which are inter-related. She has a few need needs:
- she need to see how the EPackages are related
- she need to assess the impact of an EClass which is extended to other EClasses, even if they are in another package
- she needs to make sure reference between EPackages are serialized correctly in her .ecore


*Bob's needs*

Bob needs to figure out how to use Ecore. Do so so he installed EcoreTools but have no clue how to use it.
He needs to understand how to get started. 
Bob, having no experience, will go back and forth in designing its Ecore. To see what his changes are doing 
he will need to see and edit a dynamic instance of the Ecore. Bob will not need to fiddle with the genmodel (at least not right now) and will probably not even generate the code before quite long. 
Bob needs guidance to achieve to a valid Ecore model.

 

h1. Getting started

Creating the project, basic principles of Sirius.

h1. Viewpoints

We see Alice's work can be decomposed in several phases : 
- Designing and drafting
- Polishing by documenting the model and thinking about more specialized problematics
- Tuning for code generation
- Adapting and iterating.

Sirius uses the concept of "Viewpoint" to drive the tooling. You can think about it as a Perspective which is local to a project and which can extends another one. A Viewpoint defines representations, and adaptations to other representations.
From Alice's scenario I come up  with the following Viewpoints
Design : the drafting phase and Ecore design activity 
Review : the documentation phase, and review of changes 
Generation :  ?

The user experience will revolve around several representations :
- a class-like diagram for Ecore : the domain diagram.
- a table for Documentation
- a table for Reviews




h1. Day 1 Gettting Started and Graphical Design

Let's focus on the domain diagram graphical design. 
Its graphical style should be consistent with the already existing Eclipse and EMF visual langage.
Developpers already have a lot of expectations about what is a "class diagram". The UML-like notation is well known and we should not derive from that. For instance derived references have a name prefixed with "/", composition is represented with a filled diamond and so on.

I want something beautiful yet suitable for office work. Alice will use it during meeting with customers, we don't want Alice not to look professional. Furthermore, it is important to note that as the modeler will be used using a video project which might have poor color display, important information should not rely on colors to be conveyed. 

 That's fairly abstract but I will work using base consideration of graphic design, in particular
- contrast
- repetition
- use of the label styling to convey what is "important"
- use of colors having low saturation.

- alignment
- proximity

http://wiki.eclipse.org/User_Interface_Guidelines#Color_Palette_.26_Themes


h1. Day 2 General UX


Synchronized/Unsync
Contextual Tooltips
Dedicated creation tools

The project : we'll stick with the general user experience of Sirius for this. 

The diagram : should we have a diagram which always display the content of the current EPackage or should we have one which is 


But first, what's the plan ?


h1. Day 3 : Layers (validation and documentation)


h1. Day X: Other tools 


h1. Day X : Table representation


h1. Day X : Testing


h1. Day X : Scalability


h1. Day X : Online Help

h1. Day X : Property Views


h1. TODO:

eOpposites with association ends
utilisation de feature: et java:
imported classes decorator
streamline Add/remove/add related (common wizard ?)
Marker for invalid classes?
Un-synchronized packages?
wizard

h1. Perfo


data set

48 edges
54 containers
208 DDiagramElements



avant les changements de langage, ecore diagram.

  [Acceleo][eContents(EPackage)/]  :                                                                                                                 19         ms
  [Acceleo][container <> self.eContainer()/]  :265 occurences for                                                                                    151        ms
  [Acceleo][eType/]  :                                                                                                                               25         ms
  [Acceleo]6  :                                                                                                                                      0          ms
  [Acceleo][render()/]  :                                                                                                                            285        ms
  [DDiagram]Refresh a diagram  :5 occurences for                                                                                                     3406       ms
  [Acceleo][self.oclIsKindOf(ecore::EStructuralFeature) and self.oclAsType(ecore::EStructuralFeature).required/]  :                                  123        ms
  [Acceleo][eContainer()/]  :                                                                                                                        73         ms
  [Acceleo]3  :                                                                                                                                      0          ms
  [Acceleo]0  :                                                                                                                                      11         ms
  [Acceleo]1  :                                                                                                                                      3          ms
  [Acceleo]10  :                                                                                                                                     1          ms
  [Acceleo][(not containment) and derived/]  :                                                                                                       59         ms
  [Acceleo][abstract/]  :                                                                                                                            13         ms
  [Acceleo][renderToolTip()/]  :                                                                                                                     105        ms
  [Acceleo][eParameters->including(self)->asSequence()->sortedBy(name)/]  :                                                                          159        ms
  [Acceleo][getEOppositeEReferences(eAllContents(ecore::EReference))/]  :                                                                            7          ms
  [Acceleo][eSuperTypes/]  :                                                                                                                         15         ms
  [DDiagram]Updating all edges  :                                                                                                                    530        ms
  [Acceleo][self/]  :                                                                                                                                67         ms
  [Acceleo][self.getTooltip()/]  :595 occurences for                                                                                                 358        ms
  [DDiagram]Display Service : check that the element has to be displayed  :1040 occurences for                                                       61         ms
  [Acceleo][view.targetNode->filter(viewpoint::DSemanticDecorator).target->filter(ecore::EClass)->select(interface)->notEmpty()/]  :                 56         ms
  [Acceleo][name/]  :270 occurences for                                                                                                              38         ms
  [Acceleo][oclIsTypeOf(ecore::EDataType)/]  :330 occurences for                                                                                     116        ms
  [DDiagram]Compute edge source/target views  :                                                                                                      5          ms
  [DDiagram]Get node's candidates  :                                                                                                                 297        ms
  [DDiagram]Display Service : is the element displayed ?  :5 occurences for                                                                          320        ms
  [Acceleo][eOpposite.oclIsUndefined()/]  :                                                                                                          72         ms
  [Acceleo][interface/]  :                                                                                                                           21         ms
  [Acceleo][eOperations/]  :                                                                                                                         43         ms
  [Acceleo][eAttributes/]  :                                                                                                                         42         ms
  [Acceleo][containment and derived/]  :                                                                                                             62         ms
  [Acceleo][FontFormat::bold/]  :                                                                                                                    4          ms
  [Acceleo][diagram.getDisplayedEClasses().oclAsType(ecore::EClass).eAllReferences->flatten()/]  :                                                   32         ms
  [Acceleo]12  :                                                                                                                                     4          ms
  [DDiagram]Get edge's candidates  :                                                                                                                 276        ms
  [Acceleo]<%!$containerView.filter("DDiagram")%>  :1 occurences for                                                                                 1          ms
  [GEF]Big refresh  :1 occurences for                                                                                                                49         ms
  [Acceleo][instanceClassName/]  :                                                                                                                   20         ms
  [Acceleo]Check precondition expressions  :1865 occurences for                                                                                      404        ms
  [Acceleo][containment/]  :                                                                                                                         8          ms
  [Acceleo][oclIsKindOf(ecore::EClass)/]  :1 occurences for       

after first step

  [Acceleo]feature:name  :                                                                                                                           3          ms
  [Acceleo]var:self  :                                                                                                                               5          ms
  [Acceleo][container <> self.eContainer()/]  :100 occurences for                                                                                    138        ms
  [Acceleo]feature:instanceClassName  :                                                                                                              2          ms
  [Acceleo][eType/]  :                                                                                                                               1          ms
  [Acceleo]6  :                                                                                                                                      0          ms
  [Acceleo]service:renderTooltip  :                                                                                                                  638        ms
  [DDiagram]Refresh a diagram  :5 occurences for                                                                                                     2272       ms
  [Acceleo][self.oclIsKindOf(ecore::EStructuralFeature) and self.oclAsType(ecore::EStructuralFeature).required/]  :                                  133        ms
  [Acceleo][eContainer()/]  :                                                                                                                        3          ms
  [Acceleo]3  :                                                                                                                                      0          ms
  [Acceleo]0  :                                                                                                                                      17         ms
  [Acceleo]1  :                                                                                                                                      4          ms
  [Acceleo]10  :                                                                                                                                     2          ms
  [Acceleo][(not containment) and derived/]  :                                                                                                       70         ms
  [Acceleo][renderToolTip()/]  :                                                                                                                     136        ms
  [Acceleo][eParameters->including(self)->asSequence()->sortedBy(name)/]  :                                                                          176        ms
  [Acceleo][getEOppositeEReferences(eAllContents(ecore::EReference))/]  :                                                                            5          ms
  [Acceleo]feature:interface  :                                                                                                                      2          ms
  [DDiagram]Updating all edges  :                                                                                                                    445        ms
  [Acceleo][self/]  :                                                                                                                                27         ms
  [DDiagram]Display Service : check that the element has to be displayed  :1040 occurences for                                                       54         ms
  [Acceleo]feature:eSubpackages  :                                                                                                                   1          ms
  [Acceleo][view.targetNode->filter(viewpoint::DSemanticDecorator).target->filter(ecore::EClass)->select(interface)->notEmpty()/]  :                 37         ms
  [Acceleo]feature:abstract  :100 occurences for                                                                                                     3          ms
  [Acceleo][name/]  :5 occurences for                                                                                                                3          ms
  [Acceleo][oclIsTypeOf(ecore::EDataType)/]  :165 occurences for                                                                                     123        ms
  [DDiagram]Compute edge source/target views  :                                                                                                      2          ms
  [DDiagram]Get node's candidates  :                                                                                                                 146        ms
  [Acceleo]feature:eAttributes  :                                                                                                                    3          ms
  [Acceleo]feature:eType  :                                                                                                                          0          ms
  [DDiagram]Display Service : is the element displayed ?  :5 occurences for                                                                          213        ms
  [Acceleo]feature:eContainer  :                                                                                                                     4          ms
  [Acceleo][eOpposite.oclIsUndefined()/]  :                                                                                                          77         ms
  [Acceleo][containment and derived/]  :                                                                                                             68         ms
  [Acceleo][FontFormat::bold/]  :                                                                                                                    5          ms
  [Acceleo][diagram.getDisplayedEClasses().oclAsType(ecore::EClass).eAllReferences->flatten()/]  :                                                   39         ms
  [Acceleo]12  :                                                                                                                                     2          ms
  [DDiagram]Get edge's candidates  :                                                                                                                 158        ms
  [Acceleo]<%!$containerView.filter("DDiagram")%>  :2 occurences for                                                                                 0          ms
  [Acceleo]feature:eOperations  :                                                                                                                    2          ms
  [GEF]Big refresh  :2 occurences for                                                                                                                112        ms
  [Acceleo]feature:eSuperTypes  :                                                                                                                    1          ms
  [Acceleo]service:render  :                                                                                                                         22         ms
  [Acceleo]Check precondition expressions  :1085 occurences for                                                                                      368        ms
  [Acceleo][containment/]  :                                                                                                                         8          ms
  [Acceleo][oclIsKindOf(ecore::EClass)/]  :2 occurences for      
 